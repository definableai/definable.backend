name: Run Tests

on:
  pull_request:
    branches: [dev]
  push:
    branches: [dev]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # Use environment variables from .env.test
      ENVIRONMENT: test
      JWT_SECRET: test_secret
      JWT_EXPIRE_MINUTES: 30
      DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
      APP_NAME: test_app
      MASTER_API_KEY: test_master_key
      OPENAI_API_KEY: test_openai_key
      RESEND_API_KEY: test_resend_key
      FRONTEND_URL: http://localhost:3000
      STRIPE_SECRET_KEY: test_stripe_key
      STRIPE_PUBLISHABLE_KEY: test_stripe_key
      STRIPE_WEBHOOK_SECRET: test_stripe_key
      KB_SETTINGS_VERSION: 1
      S3_BUCKET: test_bucket
      S3_ACCESS_KEY: test_key
      S3_SECRET_KEY: test_secret
      S3_ENDPOINT: test_endpoint
      FIRECRAWL_API_KEY: test_key
      CELERY_BROKER_URL: test_url
      CELERY_RESULT_BACKEND: test_url
      ANTHROPIC_API_KEY: test_key
      PUBLIC_S3_BUCKET: test_bucket
      PYTHON_SANDBOX_TESTING_URL: test_url

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-cov

      - name: Create .env.test file
        run: |
          echo "ENVIRONMENT=test" > .env.test
          echo "JWT_SECRET=test_secret" >> .env.test
          echo "JWT_EXPIRE_MINUTES=30" >> .env.test
          echo "DATABASE_URL=${{ secrets.TEST_DATABASE_URL }}" >> .env.test
          echo "APP_NAME=test_app" >> .env.test
          echo "MASTER_API_KEY=test_master_key" >> .env.test
          echo "OPENAI_API_KEY=test_openai_key" >> .env.test
          echo "RESEND_API_KEY=test_resend_key" >> .env.test
          echo "FRONTEND_URL=http://localhost:3000" >> .env.test
          echo "STRIPE_SECRET_KEY=test_stripe_key" >> .env.test
          echo "STRIPE_PUBLISHABLE_KEY=test_stripe_key" >> .env.test
          echo "STRIPE_WEBHOOK_SECRET=test_stripe_key" >> .env.test
          echo "KB_SETTINGS_VERSION=1" >> .env.test
          echo "S3_BUCKET=test_bucket" >> .env.test
          echo "S3_ACCESS_KEY=test_key" >> .env.test
          echo "S3_SECRET_KEY=test_secret" >> .env.test
          echo "S3_ENDPOINT=test_endpoint" >> .env.test
          echo "FIRECRAWL_API_KEY=test_key" >> .env.test
          echo "CELERY_BROKER_URL=test_url" >> .env.test
          echo "CELERY_RESULT_BACKEND=test_url" >> .env.test
          echo "ANTHROPIC_API_KEY=test_key" >> .env.test
          echo "PUBLIC_S3_BUCKET=test_bucket" >> .env.test
          echo "PYTHON_SANDBOX_TESTING_URL=test_url" >> .env.test

      - name: Run service unit tests
        run: |
          python -m pytest tests/services/ -v

      - name: Run API integration tests
        run: |
          python -m pytest tests/api_tests/ -v

      - name: Run tests with coverage
        run: |
          python -m pytest tests/ --cov=src --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false